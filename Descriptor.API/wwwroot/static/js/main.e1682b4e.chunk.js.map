{"version":3,"sources":["reducers/sellers.js","reducers/index.js","session/userManager.js","store.js","actions/sellersActions.js","api/sellersApi.js","home/index.js","Header.js","items/SellerInfo.js","items/LoadItems.js","Main.js","session/LoginPage.js","Entry.js","session/CallbackPage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","list","loadedSeller","reducers","combineReducers","oidc","oidcReducer","sellers","state","arguments","length","undefined","action","type","SESSION_TERMINATED","USER_EXPIRED","Object","assign","LOAD_ALL_SELLERS_SUCCESS","payload","LOAD_SELLER_SUCCESS","userManagerConfig","client_id","redirect_uri","concat","window","location","protocol","hostname","port","response_type","scope","authority","process","silent_redirect_uri","automaticSilentRenew","filterProtocolClaims","loadUserInfo","post_logout_redirect_uri","userManager","createUserManager","store","compose","applyMiddleware","thunkMiddleware","next","console","log","getState","createStore","createStoreWithMiddleware","__REDUX_DEVTOOLS_EXTENSION__","loadUser","loadAllSellers","dispatch","fetch","method","headers","Authorization","user","access_token","then","response","json","error","loadSeller","userName","ok","Promise","reject","status","fetchSeller","catch","confirmAlert","message","buttons","label","onClick","addNewSeller","addSeller","executeSearch","element","google","search","cse","getElement","execute","__gcse","parsetags","callback","setOnLoadCallback","Home","this","props","gcse","document","createElement","async","src","s","getElementsByTagName","parentNode","insertBefore","initGoogleSearch","react_default","a","Container","Row","Col","sm","Table","map","x","key","ebaySellerUserName","escalated","react_router_dom","to","style","maxHeight","overflow","dangerouslySetInnerHTML","__html","Component","connect","Header","logout","signoutRedirect","href","SellerInfo","seller","className","firstName","lastName","emailAddress","address","LoadItems","onChange","e","_this","setState","defineProperty","target","name","value","Input","bsSize","Button","size","items_SellerInfo","Main","src_Header","react_router","exact","path","component","LoginPage","redirect","signinRedirect","setTimeout","prevProps","isLoadingUser","React","Entry","expired","session_LoginPage","src_Main","withRouter","CallbackPage","redux_oidc","successCallback","history","push","errorCallback","App","es","Boolean","match","pathname","processSilentRenew","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1682b4e.chunk.js","sourcesContent":["import { LOAD_ALL_SELLERS_SUCCESS, LOAD_SELLER_SUCCESS } from \"../actions/sellersActions\";\r\nimport { SESSION_TERMINATED, USER_EXPIRED } from \"redux-oidc\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  loadedSeller: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SESSION_TERMINATED:\r\n    case USER_EXPIRED:\r\n      return Object.assign({}, state, initialState);\r\n    case LOAD_ALL_SELLERS_SUCCESS:\r\n      return Object.assign({}, state, { list: action.payload });\r\n    case LOAD_SELLER_SUCCESS:\r\n      return Object.assign({}, state, { loadedSeller: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as oidcReducer } from 'redux-oidc';\r\nimport sellersReducer from './sellers';\r\n\r\nconst reducers = combineReducers(\r\n  {\r\n    oidc: oidcReducer,\r\n    sellers: sellersReducer\r\n  }\r\n);\r\n\r\nexport default reducers;","import { createUserManager } from 'redux-oidc';\r\n\r\nconst userManagerConfig = {\r\n  client_id: 'js',\r\n  redirect_uri: `${window.location.protocol}//${window.location.hostname}${window.location.port ? `:${window.location.port}` : ''}/callback`,\r\n  response_type: 'token id_token',\r\n  scope: 'openid profile descriptor',\r\n  authority: process.env.REACT_APP_IDENTITY_HOST,\r\n  silent_redirect_uri: `${window.location.protocol}//${window.location.hostname}${window.location.port ? `:${window.location.port}` : ''}/silent-renew`,\r\n  automaticSilentRenew: true,\r\n  filterProtocolClaims: true,\r\n  loadUserInfo: true,\r\n  post_logout_redirect_uri: `${window.location.protocol}//${window.location.hostname}${window.location.port ? `:${window.location.port}` : ''}/`,\r\n};\r\n\r\nconst userManager = createUserManager(userManagerConfig);\r\nexport default userManager;","import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport { loadUser } from \"redux-oidc\";\r\nimport reducers from \"./reducers\";\r\nimport userManager from \"./session/userManager\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst loggerMiddleware = store => next => action => {\r\n  console.log(\"Action type:\", action.type);\r\n  console.log(\"Action payload:\", action.payload);\r\n  console.log(\"State before:\", store.getState());\r\n  next(action);\r\n  console.log(\"State after:\", store.getState());\r\n};\r\n\r\nconst initialState = {};\r\n\r\nconst createStoreWithMiddleware = compose(\r\n  applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n)(createStore);\r\n\r\nconst store = createStoreWithMiddleware(reducers, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nloadUser(store, userManager);\r\n\r\nexport default store;","import { fetchAllSellers, fetchSeller, addSeller } from '../api/sellersApi'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\nexport const LOAD_ALL_SELLERS_START = \"descriptor/LOAD_ALL_SELLERS_START\";\r\nexport const LOAD_ALL_SELLERS_SUCCESS = \"descriptor/LOAD_ALL_SELLERS_SUCCESS\";\r\nexport const LOAD_SELLER_START = \"descriptor/LOAD_SELLER_START\";\r\nexport const LOAD_SELLER_SUCCESS = \"descriptor/LOAD_SELLER_SUCCESS\";\r\nexport const ADD_SELLER_START = \"descriptor/ADD_SELLER_START\";\r\nexport const ADD_SELLER_SUCCESS = \"descriptor/ADD_SELLER_SUCCESS\";\r\n\r\nexport const loadAllSellers = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOAD_ALL_SELLERS_START\r\n    })\r\n\r\n    return fetchAllSellers().then(json =>\r\n      dispatch({\r\n        type: LOAD_ALL_SELLERS_SUCCESS,\r\n        payload: json\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport const loadSeller = (userName) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOAD_SELLER_START\r\n    })\r\n\r\n    return fetchSeller(userName).then(json =>\r\n      dispatch({\r\n        type: LOAD_SELLER_SUCCESS,\r\n        payload: json\r\n      })\r\n    ).catch(error => {\r\n      if (error.status === 404) {\r\n        return confirmAlert({\r\n          message: 'New Seller. Load Items?',\r\n          buttons: [\r\n            {\r\n              label: 'Yes',\r\n              onClick: () => dispatch(addNewSeller(userName))\r\n            },\r\n            {\r\n              label: 'No',\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const addNewSeller = (userName) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_SELLER_START\r\n    })\r\n\r\n    return addSeller(userName).then(json =>\r\n      dispatch({\r\n        type: ADD_SELLER_SUCCESS,\r\n        payload: json\r\n      })\r\n    )\r\n  }\r\n}","import store from '../store';\r\n\r\nexport const fetchAllSellers = () =>\r\n  fetch(`/api/sellers`, {\r\n    method: 'get',\r\n    headers: {\r\n      Authorization: `Bearer ${store.getState().oidc.user.access_token}`\r\n    }\r\n  }).then(\r\n    response => response.json(),\r\n    error => console.log('An error occurred.', error)\r\n  )\r\n\r\nexport const fetchSeller = (userName) =>\r\n  fetch(`/api/sellers/${userName}`, {\r\n    method: 'get',\r\n    headers: {\r\n      Authorization: `Bearer ${store.getState().oidc.user.access_token}`\r\n    }\r\n  }).then(\r\n    response => response.ok ? response.json() : Promise.reject({ status: response.status }),\r\n    error => console.log('An error occurred.', error)\r\n  )\r\n\r\nexport const addSeller = (userName) =>\r\n  fetch(`/api/sellers/${userName}`, {\r\n    method: 'post',\r\n    headers: {\r\n      Authorization: `Bearer ${store.getState().oidc.user.access_token}`\r\n    }\r\n  }).then(\r\n    response => response.json(),\r\n    error => console.log('An error occurred.', error)\r\n  )","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadAllSellers } from '../actions/sellersActions';\r\nimport { Table, Container, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst initGoogleSearch = () => {\r\n  var cx = '004358329873995088609:hd3fadxvfdc';\r\n  var gcse = document.createElement('script');\r\n  gcse.type = 'text/javascript';\r\n  gcse.async = true;\r\n  gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;\r\n  var s = document.getElementsByTagName('script')[0];\r\n  s.parentNode.insertBefore(gcse, s);\r\n};\r\n\r\nconst googleCode = `<gcse:searchresults-only noResultsString=\"No Results\" gname=\"e\"></gcse:searchresults-only>`;\r\n\r\nconst executeSearch = () => {\r\n  const element = window.google.search.cse.element.getElement('e');\r\n  if (element) {\r\n    element.execute(process.env.REACT_APP_SEARCH_QUERY);\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nwindow.__gcse = {\r\n  parsetags: 'onload',\r\n  callback: () => {\r\n    if (!executeSearch()) {\r\n      window.google.setOnLoadCallback(executeSearch);\r\n    }\r\n  }\r\n};\r\n\r\nclass Home extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.loadAllSellers();\r\n    initGoogleSearch();\r\n  }\r\n\r\n  render() {\r\n    const { sellers } = this.props;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col sm={5}>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Seller</th>\r\n                  <th>Escalated</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  sellers.map(x => <tr key={x.ebaySellerUserName}>\r\n                    <td>{x.ebaySellerUserName}</td>\r\n                    <td>{x.escalated}</td>\r\n                  </tr>)\r\n                }\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n          <Col sm={2}><Link to='load-items'>Load Items</Link></Col>\r\n          <Col sm={5}>\r\n            <div style={{ maxHeight: '90vh', overflow: 'auto' }} dangerouslySetInnerHTML={{ __html: googleCode }} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sellers: state.sellers.list,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadAllSellers: () => dispatch(loadAllSellers())\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react'\r\nimport userManager from './session/userManager';\r\n\r\nclass Header extends Component {\r\n\r\n  logout = () => {\r\n    userManager.signoutRedirect();\r\n  }\r\n\r\n  render() {\r\n    return (<div>\r\n      <a href=\"#\" onClick={this.logout}>Logout</a>\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SellerInfo extends Component {\r\n  render() {\r\n    const { seller } = this.props;\r\n\r\n    if (!seller)\r\n      return null;\r\n\r\n    return (\r\n      <Container className='seller-info'>\r\n        <Row>\r\n          <Col sm={2}><div className='label'>First Name:</div></Col>\r\n          <Col sm={2}><div className='textbox'>{seller.firstName}</div></Col>\r\n          <Col sm={2}><div className='label'>Last Name:</div></Col>\r\n          <Col sm={2}><div className='textbox'>{seller.lastName}</div></Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={2}><div className='label'>eMail:</div></Col>\r\n          <Col><div className='textbox'>{seller.emailAddress}</div></Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={2}><div className='label'>Address:</div></Col>\r\n          <Col><div className='textbox address'>{seller.address}</div></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    seller: state.sellers.loadedSeller,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatch\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SellerInfo);","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button, Input } from 'reactstrap';\r\nimport SellerInfo from './SellerInfo';\r\nimport './style.css';\r\nimport { loadSeller } from '../actions/sellersActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoadItems extends Component {\r\n\r\n  state = {}\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  loadSeller = () => {\r\n    if (this.state.userName)\r\n      this.props.loadSeller(this.state.userName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='infobox'>\r\n        <Container>\r\n          <Row><h2>Load Items</h2></Row>\r\n          <Row>\r\n            <Col sm={2}><div className='label'>Seller:</div></Col>\r\n            <Col sm={2}><Input onChange={this.onChange} bsSize=\"sm\" name='userName' /></Col>\r\n            <Col><Button onClick={this.loadSeller} size=\"sm\">Load</Button></Col>\r\n          </Row>\r\n        </Container>\r\n        <SellerInfo />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n  return {};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadSeller: (userName) => dispatch(loadSeller(userName))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoadItems);","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './home';\r\nimport Header from './Header';\r\nimport LoadItems from './items/LoadItems';\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Header />\r\n    <Switch>\r\n      <Route exact path='/' component={Home} />\r\n      <Route exact path='/load-items' component={LoadItems} />\r\n    </Switch>\r\n  </main>\r\n)\r\n\r\nexport default Main","import React from \"react\";\r\nimport userManager from \"./userManager\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!this.props.isLoadingUser && prevProps.isLoadingUser !== this.props.isLoadingUser) {\r\n      this.redirect();\r\n    }\r\n  }\r\n\r\n  redirect = () => {\r\n    userManager.signinRedirect().catch(error => {\r\n      console.error(error);\r\n      setTimeout(() => {\r\n        this.redirect();\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>Redirecting...</div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoadingUser: state.oidc.isLoadingUser,\r\n\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatch\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Main from './Main'\r\nimport LoginPage from './session/LoginPage';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass Entry extends Component {\r\n\r\n  render() {\r\n    let user = this.props.user;\r\n\r\n    if (!user || user.expired) {\r\n      return <LoginPage />\r\n    }\r\n    else {\r\n      return <div>\r\n        <Main />\r\n      </div>\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.oidc.user\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatch\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Entry));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CallbackComponent } from \"redux-oidc\";\r\nimport userManager from \"./userManager\";\r\n\r\nclass CallbackPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <CallbackComponent\r\n                userManager={userManager}\r\n                successCallback={() => {\r\n                    console.log('success');\r\n                    this.props.history.push(\"/\");\r\n                }}\r\n                errorCallback={error => {\r\n                    console.error(error);\r\n                    this.props.history.push(\"/\");\r\n                }}>\r\n                <div>Redirecting...</div>\r\n            </CallbackComponent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(CallbackPage);","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { OidcProvider } from 'redux-oidc';\r\nimport Entry from './Entry'\r\nimport store from './store';\r\nimport userManager from './session/userManager';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport CallbackPage from './session/CallbackPage'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <OidcProvider store={store} userManager={userManager}>\r\n          <div>\r\n            <Switch>\r\n              <Route exact path='/callback' component={CallbackPage} />\r\n              <Route path='/' component={Entry} />\r\n            </Switch>\r\n          </div>\r\n        </OidcProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { processSilentRenew } from 'redux-oidc';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nif (window.location.pathname === '/silent-renew') {\r\n  processSilentRenew();\r\n} else {\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}